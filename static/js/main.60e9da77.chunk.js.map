{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","images/coronavirus.png","App.js","index.js","App.module.css","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchedDailyData","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","length","borderColor","fill","CountryPicker","handleCountryChange","fetchedCountries","setfetchedCountries","getCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronavirus","alt","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60e9da77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1ZDjl\",\"card\":\"Cards_card__1cNP3\",\"infected\":\"Cards_infected__3BR-_\",\"recovered\":\"Cards_recovered__2hIvu\",\"deaths\":\"Cards_deaths__8Nh3-\"};","import React from 'react';\r\nimport styles from './Cards.module.css';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nconst Cards = ({data:{confirmed,recovered,deaths,lastUpdate}})=> {\r\n    if(!confirmed){\r\n        return \"Loading....\";\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start = {0} end = {confirmed.value} duration = {1} separator= \",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography color=\"textSecondary\" variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp start = {0} end = {recovered.value} duration = {1} separator= \",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography color=\"textSecondary\" variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp start = {0} end = {deaths.value} duration = {1} separator= \",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography color=\"textSecondary\" variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\nconst url =  'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country)=>{\r\n    let changeableUrl = url;\r\n    if(country) {\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n    try {\r\n        const {data:{confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableUrl);\r\n        return {confirmed,recovered,deaths,lastUpdate};\r\n    } catch (error) {\r\n        //in case of errors\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const fetchDailyData = async ()=>{\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate\r\n        }));\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const fetchCountries = async() => {\r\n    try {\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n        return countries.map((country)=> country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React,{useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport styles from './Charts.module.css';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\n\r\n\r\nconst Charts = ({data:{confirmed,recovered,deaths},country})=>{\r\n    /*useState is used for maintaining state inside functional components*/\r\n    /*Array destructuring is used so as to assign state and setState function*/\r\n    const [dailyData,setDailyData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchedDailyData = async ()=>{\r\n            setDailyData(await fetchDailyData());\r\n        };\r\n        fetchedDailyData();\r\n    },[]);\r\n    const barChart = (\r\n        confirmed?(\r\n            <Bar\r\n            data={{\r\n                labels:['Infected','Recovered','Deaths'],\r\n                datasets:[{\r\n                    label:'People',\r\n                    backgroundColor:[\r\n                        'rgba(0,0,255,0.5)',\r\n                        'rgba(0,255,0,0.5)',\r\n                        'rgba(255,0,0,0.5)',\r\n                    ],\r\n                    data:[confirmed.value,recovered.value,deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend:{display:false},\r\n                title:{display:true,text:`Current state in ${country}`}\r\n            }}\r\n            >\r\n            </Bar>\r\n        ):null\r\n    );\r\n    const lineChart =(\r\n        dailyData.length?\r\n        (<Line\r\n        data = {{\r\n            labels:dailyData.map(({date})=>date),\r\n            datasets:[\r\n            {\r\n                data:dailyData.map(({confirmed})=>confirmed),\r\n                label:'Infected',\r\n                borderColor:'#3333ff',\r\n                fill:true\r\n            },{\r\n                data:dailyData.map(({deaths})=>deaths),\r\n                label:'Deaths',\r\n                borderColor:'rgba(255,0,0)',\r\n                backgroundColor:'rgba(255,0,0,0.5)',\r\n                fill:true\r\n            }]\r\n        }}\r\n        >\r\n\r\n        </Line>):null\r\n    );\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart:lineChart}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Charts;","import React from 'react';\r\nimport {useState,useEffect} from 'react';\r\nimport styles from './CountryPicker.module.css';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\nimport {fetchCountries} from '../../api';\r\nconst CountryPicker = ({handleCountryChange})=> {\r\n    const [fetchedCountries,setfetchedCountries] = useState([])\r\n    useEffect(()=>{\r\n        const getCountries = async()=>{\r\n            setfetchedCountries(await fetchCountries())\r\n        }\r\n        getCountries();\r\n    },[setfetchedCountries]);\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n    {fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/coronavirus.9e5d4fc7.png\";","import React from 'react';\nimport {Cards,Charts,CountryPicker} from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\nimport coronavirus from './images/coronavirus.png';\nclass App extends React.Component {\n  state = {\n    data:{},\n    country:''\n  }\n async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({data:fetchedData});\n  }\n\n  handleCountryChange = async (country)=>{\n    const fetchedData = await fetchData(country);\n    this.setState({data:fetchedData,country:country});\n  };\n\n  render() {\n    const {data,country} = this.state;\n    return (\n      <div className ={styles.container}>\n        <img className={styles.image} src={coronavirus} alt=\"COVID-19\"/>\n        <Cards data={data}/>\n        <CountryPicker handleCountryChange = {this.handleCountryChange}/>\n        <Charts data={data} country={country}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3JYYa\",\"image\":\"App_image__kRxXC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__26fj_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2Jp5-\"};"],"sourceRoot":""}